package mod.ke2.init;

import java.util.ArrayList;
import java.util.HashMap;

import mod.ke2.block.BlockCarbonite;
import mod.ke2.block.BlockCarboniteStairs;
import mod.ke2.block.BlockCluster;
import mod.ke2.block.BlockDrainBlock;
import mod.ke2.block.BlockDrainLily;
import mod.ke2.block.BlockDrainSlab;
import mod.ke2.block.BlockMagicMoss;
import mod.ke2.block.BlockMossRose;
import mod.ke2.block.BlockOre;
import mod.ke2.block.BlockWailingStone;
import mod.ke2.block.BlockWarpPadCore;
import mod.ke2.block.BlockWarpPadEdge;
import mod.ke2.block.BlockWarpPadFrame;
import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.oredict.OreDictionary;

public class Ke2Blocks {
	public static final HashMap<String, Item> DICTS = new HashMap<String, Item>();
	public static final HashMap<Item, String[]> META = new HashMap<Item, String[]>();
	public static final ArrayList<Item> ITEMS = new ArrayList<Item>();

	public static final BlockWailingStone WAILING_STONE = new BlockWailingStone();

	public static final BlockMagicMoss MAGIC_MOSS = new BlockMagicMoss();
	public static final BlockMossRose MOSS_ROSE = new BlockMossRose();

	public static final BlockDrainLily VALLEY_DRAIN_LILY = new BlockDrainLily("valley");
	public static final BlockDrainLily DESERT_DRAIN_LILY = new BlockDrainLily("desert");
	public static final BlockDrainLily ALPINE_DRAIN_LILY = new BlockDrainLily("alpine");
	public static final BlockDrainLily NETHER_DRAIN_LILY = new BlockDrainLily("nether");

	public static final BlockDrainBlock LIGHT_PURPLE_DRAIN_BLOCK = new BlockDrainBlock(false, "purple", 0);
	public static final BlockDrainSlab LIGHT_PURPLE_DRAIN_SLAB = new BlockDrainSlab("purple", 0);
	public static final BlockDrainBlock BANDED_PURPLE_DRAIN_BLOCK = new BlockDrainBlock(false, "purple", 1);
	public static final BlockDrainSlab BANDED_PURPLE_DRAIN_SLAB = new BlockDrainSlab("purple", 1);
	public static final BlockDrainBlock DARK_PURPLE_DRAIN_BLOCK = new BlockDrainBlock(false, "purple", 2);
	public static final BlockDrainSlab DARK_PURPLE_DRAIN_SLAB = new BlockDrainSlab("purple", 2);
	public static final BlockDrainBlock ERODED_PURPLE_DRAIN_BLOCK = new BlockDrainBlock(true, "purple", 3);
	public static final BlockDrainBlock LIGHT_ORANGE_DRAIN_BLOCK = new BlockDrainBlock(false, "orange", 0);
	public static final BlockDrainSlab LIGHT_ORANGE_DRAIN_SLAB = new BlockDrainSlab("orange", 0);
	public static final BlockDrainBlock BANDED_ORANGE_DRAIN_BLOCK = new BlockDrainBlock(false, "orange", 1);
	public static final BlockDrainSlab BANDED_ORANGE_DRAIN_SLAB = new BlockDrainSlab("orange", 1);
	public static final BlockDrainBlock DARK_ORANGE_DRAIN_BLOCK = new BlockDrainBlock(false, "orange", 2);
	public static final BlockDrainSlab DARK_ORANGE_DRAIN_SLAB = new BlockDrainSlab("orange", 2);
	public static final BlockDrainBlock ERODED_ORANGE_DRAIN_BLOCK = new BlockDrainBlock(true, "orange", 3);
	public static final BlockDrainBlock LIGHT_BLUE_DRAIN_BLOCK = new BlockDrainBlock(false, "blue", 0);
	public static final BlockDrainSlab LIGHT_BLUE_DRAIN_SLAB = new BlockDrainSlab("blue", 0);
	public static final BlockDrainBlock BANDED_BLUE_DRAIN_BLOCK = new BlockDrainBlock(false, "blue", 1);
	public static final BlockDrainSlab BANDED_BLUE_DRAIN_SLAB = new BlockDrainSlab("blue", 1);
	public static final BlockDrainBlock DARK_BLUE_DRAIN_BLOCK = new BlockDrainBlock(false, "blue", 2);
	public static final BlockDrainSlab DARK_BLUE_DRAIN_SLAB = new BlockDrainSlab("blue", 2);
	public static final BlockDrainBlock ERODED_BLUE_DRAIN_BLOCK = new BlockDrainBlock(true, "blue", 3);
	public static final BlockDrainBlock LIGHT_RED_DRAIN_BLOCK = new BlockDrainBlock(false, "red", 0);
	public static final BlockDrainSlab LIGHT_RED_DRAIN_SLAB = new BlockDrainSlab("red", 0);
	public static final BlockDrainBlock BANDED_RED_DRAIN_BLOCK = new BlockDrainBlock(false, "red", 1);
	public static final BlockDrainSlab BANDED_RED_DRAIN_SLAB = new BlockDrainSlab("red", 1);
	public static final BlockDrainBlock DARK_RED_DRAIN_BLOCK = new BlockDrainBlock(false, "red", 2);
	public static final BlockDrainSlab DARK_RED_DRAIN_SLAB = new BlockDrainSlab("red", 2);
	public static final BlockDrainBlock ERODED_RED_DRAIN_BLOCK = new BlockDrainBlock(true, "red", 3);

	public static final BlockCarbonite WHITE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_WHITE);
	public static final BlockCarboniteStairs WHITE_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.WHITE_CARBONITE);
	public static final BlockCarbonite WHITE_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_WHITE, false);
	public static final BlockCarbonite WHITE_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_WHITE, true);
	public static final BlockCarbonite WHITE_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_WHITE);
	public static final BlockCarbonite WHITE_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_WHITE, false);
	public static final BlockCarbonite WHITE_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_WHITE, true);
	public static final BlockCarbonite ORANGE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_ORANGE);
	public static final BlockCarboniteStairs ORANGE_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.ORANGE_CARBONITE);
	public static final BlockCarbonite ORANGE_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_ORANGE, false);
	public static final BlockCarbonite ORANGE_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_ORANGE, true);
	public static final BlockCarbonite ORANGE_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_ORANGE);
	public static final BlockCarbonite ORANGE_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_ORANGE, false);
	public static final BlockCarbonite ORANGE_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_ORANGE, true);
	public static final BlockCarbonite MAGENTA_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_MAGENTA);
	public static final BlockCarboniteStairs MAGENTA_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.MAGENTA_CARBONITE);
	public static final BlockCarbonite MAGENTA_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_MAGENTA, false);
	public static final BlockCarbonite MAGENTA_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_MAGENTA, true);
	public static final BlockCarbonite MAGENTA_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_MAGENTA);
	public static final BlockCarbonite MAGENTA_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_MAGENTA, false);
	public static final BlockCarbonite MAGENTA_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_MAGENTA, true);
	public static final BlockCarbonite LIGHTBLUE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_LIGHTBLUE);
	public static final BlockCarboniteStairs LIGHTBLUE_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.LIGHTBLUE_CARBONITE);
	public static final BlockCarbonite LIGHTBLUE_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_LIGHTBLUE, false);
	public static final BlockCarbonite LIGHTBLUE_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_LIGHTBLUE, true);
	public static final BlockCarbonite LIGHTBLUE_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_LIGHTBLUE);
	public static final BlockCarbonite LIGHTBLUE_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_LIGHTBLUE, false);
	public static final BlockCarbonite LIGHTBLUE_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_LIGHTBLUE, true);
	public static final BlockCarbonite YELLOW_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_YELLOW);
	public static final BlockCarboniteStairs YELLOW_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.YELLOW_CARBONITE);
	public static final BlockCarbonite YELLOW_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_YELLOW, false);
	public static final BlockCarbonite YELLOW_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_YELLOW, true);
	public static final BlockCarbonite YELLOW_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_YELLOW);
	public static final BlockCarbonite YELLOW_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_YELLOW, false);
	public static final BlockCarbonite YELLOW_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_YELLOW, true);
	public static final BlockCarbonite LIME_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_LIME);
	public static final BlockCarboniteStairs LIME_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.LIME_CARBONITE);
	public static final BlockCarbonite LIME_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_LIME, false);
	public static final BlockCarbonite LIME_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_LIME, true);
	public static final BlockCarbonite LIME_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_LIME);
	public static final BlockCarbonite LIME_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_LIME, false);
	public static final BlockCarbonite LIME_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_LIME, true);
	public static final BlockCarbonite PINK_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_PINK);
	public static final BlockCarboniteStairs PINK_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.PINK_CARBONITE);
	public static final BlockCarbonite PINK_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_PINK, false);
	public static final BlockCarbonite PINK_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_PINK, true);
	public static final BlockCarbonite PINK_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_PINK);
	public static final BlockCarbonite PINK_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_PINK, false);
	public static final BlockCarbonite PINK_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_PINK, true);
	public static final BlockCarbonite GRAY_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_GRAY);
	public static final BlockCarboniteStairs GRAY_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.GRAY_CARBONITE);
	public static final BlockCarbonite GRAY_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_GRAY, false);
	public static final BlockCarbonite GRAY_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_GRAY, true);
	public static final BlockCarbonite GRAY_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_GRAY);
	public static final BlockCarbonite GRAY_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_GRAY, false);
	public static final BlockCarbonite GRAY_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_GRAY, true);
	public static final BlockCarbonite SILVER_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_SILVER);
	public static final BlockCarboniteStairs SILVER_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.SILVER_CARBONITE);
	public static final BlockCarbonite SILVER_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_SILVER, false);
	public static final BlockCarbonite SILVER_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_SILVER, true);
	public static final BlockCarbonite SILVER_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_SILVER);
	public static final BlockCarbonite SILVER_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_SILVER, false);
	public static final BlockCarbonite SILVER_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_SILVER, true);
	public static final BlockCarbonite CYAN_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_CYAN);
	public static final BlockCarboniteStairs CYAN_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.CYAN_CARBONITE);
	public static final BlockCarbonite CYAN_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_CYAN, false);
	public static final BlockCarbonite CYAN_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_CYAN, true);
	public static final BlockCarbonite CYAN_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_CYAN);
	public static final BlockCarbonite CYAN_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_CYAN, false);
	public static final BlockCarbonite CYAN_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_CYAN, true);
	public static final BlockCarbonite PURPLE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_PURPLE);
	public static final BlockCarboniteStairs PURPLE_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.PURPLE_CARBONITE);
	public static final BlockCarbonite PURPLE_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_PURPLE, false);
	public static final BlockCarbonite PURPLE_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_PURPLE, true);
	public static final BlockCarbonite PURPLE_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_PURPLE);
	public static final BlockCarbonite PURPLE_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_PURPLE, false);
	public static final BlockCarbonite PURPLE_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_PURPLE, true);
	public static final BlockCarbonite BLUE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_BLUE);
	public static final BlockCarboniteStairs BLUE_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.BLUE_CARBONITE);
	public static final BlockCarbonite BLUE_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BLUE, false);
	public static final BlockCarbonite BLUE_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BLUE, true);
	public static final BlockCarbonite BLUE_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_BLUE);
	public static final BlockCarbonite BLUE_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BLUE, false);
	public static final BlockCarbonite BLUE_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BLUE, true);
	public static final BlockCarbonite BROWN_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_BROWN);
	public static final BlockCarboniteStairs BROWN_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.BROWN_CARBONITE);
	public static final BlockCarbonite BROWN_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BROWN, false);
	public static final BlockCarbonite BROWN_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BROWN, true);
	public static final BlockCarbonite BROWN_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_BROWN);
	public static final BlockCarbonite BROWN_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BROWN, false);
	public static final BlockCarbonite BROWN_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BROWN, true);
	public static final BlockCarbonite GREEN_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_GREEN);
	public static final BlockCarboniteStairs GREEN_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.GREEN_CARBONITE);
	public static final BlockCarbonite GREEN_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_GREEN, false);
	public static final BlockCarbonite GREEN_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_GREEN, true);
	public static final BlockCarbonite GREEN_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_GREEN);
	public static final BlockCarbonite GREEN_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_GREEN, false);
	public static final BlockCarbonite GREEN_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_GREEN, true);
	public static final BlockCarbonite RED_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_RED);
	public static final BlockCarboniteStairs RED_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.RED_CARBONITE);
	public static final BlockCarbonite RED_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_RED, false);
	public static final BlockCarbonite RED_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_RED, true);
	public static final BlockCarbonite RED_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_RED);
	public static final BlockCarbonite RED_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_RED, false);
	public static final BlockCarbonite RED_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_RED, true);
	public static final BlockCarbonite BLACK_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.INERT, Ke2Gems.BASIC_BLACK);
	public static final BlockCarboniteStairs BLACK_CARBONITE_STAIRS = new BlockCarboniteStairs(Ke2Blocks.BLACK_CARBONITE);
	public static final BlockCarbonite BLACK_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BLACK, false);
	public static final BlockCarbonite BLACK_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.ACTIVE, Ke2Gems.BASIC_BLACK, true);
	public static final BlockCarbonite BLACK_DECORATIVE_CARBONITE = new BlockCarbonite(BlockCarbonite.Variety.DECORATIVE, Ke2Gems.BASIC_BLACK);
	public static final BlockCarbonite BLACK_HOLOGRAPHIC_CARBONITE_OFF = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BLACK, false);
	public static final BlockCarbonite BLACK_HOLOGRAPHIC_CARBONITE_ON = new BlockCarbonite(BlockCarbonite.Variety.HOLOGRAPHIC, Ke2Gems.BASIC_BLACK, true);

	public static final BlockWarpPadCore WHITE_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_WHITE);
	public static final BlockWarpPadFrame WHITE_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_WHITE);
	public static final BlockWarpPadEdge WHITE_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.WHITE_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore ORANGE_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_ORANGE);
	public static final BlockWarpPadFrame ORANGE_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_ORANGE);
	public static final BlockWarpPadEdge ORANGE_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.ORANGE_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore MAGENTA_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_MAGENTA);
	public static final BlockWarpPadFrame MAGENTA_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_MAGENTA);
	public static final BlockWarpPadEdge MAGENTA_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.MAGENTA_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore LIGHTBLUE_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_LIGHTBLUE);
	public static final BlockWarpPadFrame LIGHTBLUE_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_LIGHTBLUE);
	public static final BlockWarpPadEdge LIGHTBLUE_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.LIGHTBLUE_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore YELLOW_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_YELLOW);
	public static final BlockWarpPadFrame YELLOW_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_YELLOW);
	public static final BlockWarpPadEdge YELLOW_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.YELLOW_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore LIME_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_LIME);
	public static final BlockWarpPadFrame LIME_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_LIME);
	public static final BlockWarpPadEdge LIME_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.LIME_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore PINK_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_PINK);
	public static final BlockWarpPadFrame PINK_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_PINK);
	public static final BlockWarpPadEdge PINK_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.PINK_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore GRAY_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_GRAY);
	public static final BlockWarpPadFrame GRAY_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_GRAY);
	public static final BlockWarpPadEdge GRAY_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.GRAY_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore SILVER_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_SILVER);
	public static final BlockWarpPadFrame SILVER_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_SILVER);
	public static final BlockWarpPadEdge SILVER_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.SILVER_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore CYAN_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_CYAN);
	public static final BlockWarpPadFrame CYAN_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_CYAN);
	public static final BlockWarpPadEdge CYAN_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.CYAN_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore PURPLE_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_PURPLE);
	public static final BlockWarpPadFrame PURPLE_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_PURPLE);
	public static final BlockWarpPadEdge PURPLE_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.PURPLE_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore BLUE_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_BLUE);
	public static final BlockWarpPadFrame BLUE_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_BLUE);
	public static final BlockWarpPadEdge BLUE_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.BLUE_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore BROWN_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_BROWN);
	public static final BlockWarpPadFrame BROWN_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_BROWN);
	public static final BlockWarpPadEdge BROWN_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.BROWN_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore GREEN_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_GREEN);
	public static final BlockWarpPadFrame GREEN_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_GREEN);
	public static final BlockWarpPadEdge GREEN_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.GREEN_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore RED_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_RED);
	public static final BlockWarpPadFrame RED_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_RED);
	public static final BlockWarpPadEdge RED_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.RED_WARP_PAD_FRAME.getDefaultState());
	public static final BlockWarpPadCore BLACK_WARP_PAD_CORE = new BlockWarpPadCore(Ke2Gems.BASIC_BLACK);
	public static final BlockWarpPadFrame BLACK_WARP_PAD_FRAME = new BlockWarpPadFrame(Ke2Gems.BASIC_BLACK);
	public static final BlockWarpPadEdge BLACK_WARP_PAD_EDGE = new BlockWarpPadEdge(Ke2Blocks.BLACK_WARP_PAD_FRAME.getDefaultState());

	public static final BlockCluster CLUSTER = new BlockCluster();
	
	public static final BlockOre TUNGSTEN_ORE = new BlockOre("tungsten");

	public static void register(RegistryEvent.Register<Block> event) {
		Ke2Blocks.registerBlock(Ke2Blocks.CLUSTER, new ResourceLocation("ke2:cluster"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WAILING_STONE, new ResourceLocation("ke2:wailing_stone"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGIC_MOSS, new ResourceLocation("ke2:magic_moss"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MOSS_ROSE, new ResourceLocation("ke2:moss_rose"), event);

		Ke2Blocks.registerBlock(Ke2Blocks.VALLEY_DRAIN_LILY, new ResourceLocation("ke2:valley_drain_lily"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DESERT_DRAIN_LILY, new ResourceLocation("ke2:desert_drain_lily"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ALPINE_DRAIN_LILY, new ResourceLocation("ke2:alpine_drain_lily"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.NETHER_DRAIN_LILY, new ResourceLocation("ke2:nether_drain_lily"), event);

		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_PURPLE_DRAIN_BLOCK, new ResourceLocation("ke2:light_purple_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_PURPLE_DRAIN_SLAB, new ResourceLocation("ke2:light_purple_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_PURPLE_DRAIN_BLOCK, new ResourceLocation("ke2:banded_purple_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_PURPLE_DRAIN_SLAB, new ResourceLocation("ke2:banded_purple_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_PURPLE_DRAIN_BLOCK, new ResourceLocation("ke2:dark_purple_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_PURPLE_DRAIN_SLAB, new ResourceLocation("ke2:dark_purple_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ERODED_PURPLE_DRAIN_BLOCK, new ResourceLocation("ke2:eroded_purple_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_ORANGE_DRAIN_BLOCK, new ResourceLocation("ke2:light_orange_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_ORANGE_DRAIN_SLAB, new ResourceLocation("ke2:light_orange_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_ORANGE_DRAIN_BLOCK, new ResourceLocation("ke2:banded_orange_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_ORANGE_DRAIN_SLAB, new ResourceLocation("ke2:banded_orange_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_ORANGE_DRAIN_BLOCK, new ResourceLocation("ke2:dark_orange_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_ORANGE_DRAIN_SLAB, new ResourceLocation("ke2:dark_orange_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ERODED_ORANGE_DRAIN_BLOCK, new ResourceLocation("ke2:eroded_orange_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_BLUE_DRAIN_BLOCK, new ResourceLocation("ke2:light_blue_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_BLUE_DRAIN_SLAB, new ResourceLocation("ke2:light_blue_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_BLUE_DRAIN_BLOCK, new ResourceLocation("ke2:banded_blue_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_BLUE_DRAIN_SLAB, new ResourceLocation("ke2:banded_blue_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_BLUE_DRAIN_BLOCK, new ResourceLocation("ke2:dark_blue_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_BLUE_DRAIN_SLAB, new ResourceLocation("ke2:dark_blue_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ERODED_BLUE_DRAIN_BLOCK, new ResourceLocation("ke2:eroded_blue_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_RED_DRAIN_BLOCK, new ResourceLocation("ke2:light_red_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHT_RED_DRAIN_SLAB, new ResourceLocation("ke2:light_red_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_RED_DRAIN_BLOCK, new ResourceLocation("ke2:banded_red_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BANDED_RED_DRAIN_SLAB, new ResourceLocation("ke2:banded_red_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_RED_DRAIN_BLOCK, new ResourceLocation("ke2:dark_red_drain_block"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.DARK_RED_DRAIN_SLAB, new ResourceLocation("ke2:dark_red_drain_slab"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ERODED_RED_DRAIN_BLOCK, new ResourceLocation("ke2:eroded_red_drain_block"), event);

		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_CARBONITE, new ResourceLocation("ke2:white_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_CARBONITE_STAIRS, new ResourceLocation("ke2:white_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_CARBONITE_OFF, new ResourceLocation("ke2:white_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_CARBONITE_ON, new ResourceLocation("ke2:white_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_DECORATIVE_CARBONITE, new ResourceLocation("ke2:white_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:white_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:white_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_CARBONITE, new ResourceLocation("ke2:orange_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_CARBONITE_STAIRS, new ResourceLocation("ke2:orange_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_CARBONITE_OFF, new ResourceLocation("ke2:orange_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_CARBONITE_ON, new ResourceLocation("ke2:orange_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_DECORATIVE_CARBONITE, new ResourceLocation("ke2:orange_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:orange_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:orange_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_CARBONITE, new ResourceLocation("ke2:magenta_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_CARBONITE_STAIRS, new ResourceLocation("ke2:magenta_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_CARBONITE_OFF, new ResourceLocation("ke2:magenta_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_CARBONITE_ON, new ResourceLocation("ke2:magenta_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_DECORATIVE_CARBONITE, new ResourceLocation("ke2:magenta_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:magenta_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:magenta_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_CARBONITE, new ResourceLocation("ke2:lightblue_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_CARBONITE_STAIRS, new ResourceLocation("ke2:lightblue_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_CARBONITE_OFF, new ResourceLocation("ke2:lightblue_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_CARBONITE_ON, new ResourceLocation("ke2:lightblue_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_DECORATIVE_CARBONITE, new ResourceLocation("ke2:lightblue_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:lightblue_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:lightblue_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_CARBONITE, new ResourceLocation("ke2:yellow_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_CARBONITE_STAIRS, new ResourceLocation("ke2:yellow_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_CARBONITE_OFF, new ResourceLocation("ke2:yellow_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_CARBONITE_ON, new ResourceLocation("ke2:yellow_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_DECORATIVE_CARBONITE, new ResourceLocation("ke2:yellow_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:yellow_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:yellow_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_CARBONITE, new ResourceLocation("ke2:lime_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_CARBONITE_STAIRS, new ResourceLocation("ke2:lime_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_CARBONITE_OFF, new ResourceLocation("ke2:lime_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_CARBONITE_ON, new ResourceLocation("ke2:lime_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_DECORATIVE_CARBONITE, new ResourceLocation("ke2:lime_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:lime_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:lime_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_CARBONITE, new ResourceLocation("ke2:pink_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_CARBONITE_STAIRS, new ResourceLocation("ke2:pink_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_CARBONITE_OFF, new ResourceLocation("ke2:pink_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_CARBONITE_ON, new ResourceLocation("ke2:pink_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_DECORATIVE_CARBONITE, new ResourceLocation("ke2:pink_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:pink_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:pink_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_CARBONITE, new ResourceLocation("ke2:gray_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_CARBONITE_STAIRS, new ResourceLocation("ke2:gray_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_CARBONITE_OFF, new ResourceLocation("ke2:gray_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_CARBONITE_ON, new ResourceLocation("ke2:gray_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_DECORATIVE_CARBONITE, new ResourceLocation("ke2:gray_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:gray_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:gray_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_CARBONITE, new ResourceLocation("ke2:silver_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_CARBONITE_STAIRS, new ResourceLocation("ke2:silver_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_CARBONITE_OFF, new ResourceLocation("ke2:silver_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_CARBONITE_ON, new ResourceLocation("ke2:silver_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_DECORATIVE_CARBONITE, new ResourceLocation("ke2:silver_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:silver_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:silver_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_CARBONITE, new ResourceLocation("ke2:cyan_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_CARBONITE_STAIRS, new ResourceLocation("ke2:cyan_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_CARBONITE_OFF, new ResourceLocation("ke2:cyan_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_CARBONITE_ON, new ResourceLocation("ke2:cyan_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_DECORATIVE_CARBONITE, new ResourceLocation("ke2:cyan_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:cyan_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:cyan_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_CARBONITE, new ResourceLocation("ke2:purple_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_CARBONITE_STAIRS, new ResourceLocation("ke2:purple_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_CARBONITE_OFF, new ResourceLocation("ke2:purple_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_CARBONITE_ON, new ResourceLocation("ke2:purple_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_DECORATIVE_CARBONITE, new ResourceLocation("ke2:purple_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:purple_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:purple_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_CARBONITE, new ResourceLocation("ke2:blue_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_CARBONITE_STAIRS, new ResourceLocation("ke2:blue_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_CARBONITE_OFF, new ResourceLocation("ke2:blue_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_CARBONITE_ON, new ResourceLocation("ke2:blue_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_DECORATIVE_CARBONITE, new ResourceLocation("ke2:blue_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:blue_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:blue_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_CARBONITE, new ResourceLocation("ke2:brown_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_CARBONITE_STAIRS, new ResourceLocation("ke2:brown_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_CARBONITE_OFF, new ResourceLocation("ke2:brown_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_CARBONITE_ON, new ResourceLocation("ke2:brown_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_DECORATIVE_CARBONITE, new ResourceLocation("ke2:brown_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:brown_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:brown_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_CARBONITE, new ResourceLocation("ke2:green_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_CARBONITE_STAIRS, new ResourceLocation("ke2:green_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_CARBONITE_OFF, new ResourceLocation("ke2:green_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_CARBONITE_ON, new ResourceLocation("ke2:green_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_DECORATIVE_CARBONITE, new ResourceLocation("ke2:green_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:green_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:green_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_CARBONITE, new ResourceLocation("ke2:red_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_CARBONITE_STAIRS, new ResourceLocation("ke2:red_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_CARBONITE_OFF, new ResourceLocation("ke2:red_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_CARBONITE_ON, new ResourceLocation("ke2:red_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_DECORATIVE_CARBONITE, new ResourceLocation("ke2:red_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:red_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:red_holographic_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_CARBONITE, new ResourceLocation("ke2:black_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_CARBONITE_STAIRS, new ResourceLocation("ke2:black_carbonite_stairs"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_CARBONITE_OFF, new ResourceLocation("ke2:black_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_CARBONITE_ON, new ResourceLocation("ke2:black_carbonite_on"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_DECORATIVE_CARBONITE, new ResourceLocation("ke2:black_decorative_carbonite"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_HOLOGRAPHIC_CARBONITE_OFF, new ResourceLocation("ke2:black_holographic_carbonite_off"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_HOLOGRAPHIC_CARBONITE_ON, new ResourceLocation("ke2:black_holographic_carbonite_on"), event);

		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_WARP_PAD_CORE, new ResourceLocation("ke2:white_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_WARP_PAD_FRAME, new ResourceLocation("ke2:white_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.WHITE_WARP_PAD_EDGE, new ResourceLocation("ke2:white_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_WARP_PAD_CORE, new ResourceLocation("ke2:orange_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_WARP_PAD_FRAME, new ResourceLocation("ke2:orange_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.ORANGE_WARP_PAD_EDGE, new ResourceLocation("ke2:orange_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_WARP_PAD_CORE, new ResourceLocation("ke2:magenta_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_WARP_PAD_FRAME, new ResourceLocation("ke2:magenta_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.MAGENTA_WARP_PAD_EDGE, new ResourceLocation("ke2:magenta_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_WARP_PAD_CORE, new ResourceLocation("ke2:lightblue_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_WARP_PAD_FRAME, new ResourceLocation("ke2:lightblue_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIGHTBLUE_WARP_PAD_EDGE, new ResourceLocation("ke2:lightblue_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_WARP_PAD_CORE, new ResourceLocation("ke2:yellow_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_WARP_PAD_FRAME, new ResourceLocation("ke2:yellow_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.YELLOW_WARP_PAD_EDGE, new ResourceLocation("ke2:yellow_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_WARP_PAD_CORE, new ResourceLocation("ke2:lime_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_WARP_PAD_FRAME, new ResourceLocation("ke2:lime_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.LIME_WARP_PAD_EDGE, new ResourceLocation("ke2:lime_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_WARP_PAD_CORE, new ResourceLocation("ke2:pink_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_WARP_PAD_FRAME, new ResourceLocation("ke2:pink_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PINK_WARP_PAD_EDGE, new ResourceLocation("ke2:pink_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_WARP_PAD_CORE, new ResourceLocation("ke2:gray_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_WARP_PAD_FRAME, new ResourceLocation("ke2:gray_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GRAY_WARP_PAD_EDGE, new ResourceLocation("ke2:gray_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_WARP_PAD_CORE, new ResourceLocation("ke2:silver_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_WARP_PAD_FRAME, new ResourceLocation("ke2:silver_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.SILVER_WARP_PAD_EDGE, new ResourceLocation("ke2:silver_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_WARP_PAD_CORE, new ResourceLocation("ke2:cyan_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_WARP_PAD_FRAME, new ResourceLocation("ke2:cyan_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.CYAN_WARP_PAD_EDGE, new ResourceLocation("ke2:cyan_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_WARP_PAD_CORE, new ResourceLocation("ke2:purple_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_WARP_PAD_FRAME, new ResourceLocation("ke2:purple_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.PURPLE_WARP_PAD_EDGE, new ResourceLocation("ke2:purple_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_WARP_PAD_CORE, new ResourceLocation("ke2:blue_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_WARP_PAD_FRAME, new ResourceLocation("ke2:blue_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLUE_WARP_PAD_EDGE, new ResourceLocation("ke2:blue_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_WARP_PAD_CORE, new ResourceLocation("ke2:brown_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_WARP_PAD_FRAME, new ResourceLocation("ke2:brown_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BROWN_WARP_PAD_EDGE, new ResourceLocation("ke2:brown_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_WARP_PAD_CORE, new ResourceLocation("ke2:green_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_WARP_PAD_FRAME, new ResourceLocation("ke2:green_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.GREEN_WARP_PAD_EDGE, new ResourceLocation("ke2:green_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_WARP_PAD_CORE, new ResourceLocation("ke2:red_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_WARP_PAD_FRAME, new ResourceLocation("ke2:red_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.RED_WARP_PAD_EDGE, new ResourceLocation("ke2:red_warp_pad_edge"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_WARP_PAD_CORE, new ResourceLocation("ke2:black_warp_pad_core"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_WARP_PAD_FRAME, new ResourceLocation("ke2:black_warp_pad_frame"), event);
		Ke2Blocks.registerBlock(Ke2Blocks.BLACK_WARP_PAD_EDGE, new ResourceLocation("ke2:black_warp_pad_edge"), event);
		
		Ke2Blocks.registerOre(Ke2Blocks.TUNGSTEN_ORE, new ResourceLocation("ke2:tungsten_ore"), event, "oreTungsten");
	}

	public static void registerOre(Block block, ResourceLocation name, RegistryEvent.Register<Block> event, String... ores) {
		Ke2Blocks.registerBlock(block, name, event);
		for (int i = 0; i < ores.length; ++i) {
			OreDictionary.registerOre(ores[i], Ke2Blocks.ITEMS.get(Ke2Blocks.ITEMS.size() - 1));
		}
	}

	public static void registerBlock(Block block, ResourceLocation name, RegistryEvent.Register<Block> event, String... meta) {
		event.getRegistry().register(block.setRegistryName(name));
		Ke2Blocks.ITEMS.add(new ItemBlock(block).setRegistryName(name));
	}
}